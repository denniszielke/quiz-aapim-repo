<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - Only the <forward-request> policy element can appear within the <backend> section element.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
-->
<policies>
	<inbound>
		<validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized - token validation failed by APIM - need to be in quizmaker role" require-signed-tokens="true" require-expiration-time="true">
			<openid-config url="https://login.windows.net/{{AADTenantId}}/.well-known/openid-configuration" />
			<audiences>
				<audience>{{TokenAudience}}</audience>
				<!-- if there are multiple possible allowed values, then add additional value elements -->
			</audiences>
			<issuers>
				<issuer>https://sts.windows.net/{{AADTenantId}}/</issuer>
				<!-- if there are multiple possible allowed values, then add additional value elements -->
			</issuers>
			<required-claims>
				<claim name="roles" match="all">
					<value>quizmaker</value>
				</claim>
				<!-- if there are multiple possible allowed values, then add additional value elements -->
			</required-claims>
		</validate-jwt>
		<set-variable name="roles" value="@(string.Join(", ", context.Request.Headers.GetValueOrDefault("Authorization","").Split(' ')[1].AsJwt()?.Claims["roles"]))" />
		<set-backend-service base-url="{{QuizApiBackend}}" />
		<base />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<set-header name="Called-As-Role" exists-action="skip">
			<value>@((String)context.Variables["roles"])</value>
			<!-- for multiple headers with the same name add additional value elements -->
		</set-header>
		<base />
	</outbound>
</policies>